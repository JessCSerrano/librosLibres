package com.jessCSerrano.librosLibres.adapters.persistence.repository.author.springdata;

import com.jessCSerrano.librosLibres.adapters.persistence.entity.author.AuthorEntity;
import org.springframework.data.jpa.repository.JpaRepository;

import java.util.Optional;
import java.util.UUID;

/**
 * Spring Data JPA interface for AuthorEntity persistence.
 * Provides CRUD methods on the authors table.
 * The specific implementation is automatically generated by Spring Data.
 */
public interface SpringDataAuthorRepository extends JpaRepository<AuthorEntity, UUID> {
    /**
     * Search for an author by their first and last name, ignoring upper and lower case letters
     *
     * @param name     the name of the author to search for
     * @param lastName the last name of the author to search for
     * @return an Optional containing the AuthorEntity if found, or Optional.empty() otherwise
     */
    Optional<AuthorEntity> findByNameIgnoreCaseAndLastNameIgnoreCase(String name, String lastName);
}
